#=======
# USAGE
#=======
#
#   1) Specify input - MUST
#
#     Syntax: input  /path/to/file/or/dir
#
#     Examples:
#       input input.jpg
#       input /dev/shm/input
#
#   2) Specify output - MUST
#
#     Syntax: output /path/to/file/or/dir
#
#     Examples:
#       output output.jpeg
#       output /dev/shm/output
#
#   3) Operations
#
#     Syntax:
#       fpga/cpu convert     wxh    wxh  # resize + crop
#       fpga/cpu jpeg_open   wxh/r%      # open   + resize, by w&h or by ratio
#       fpga/cpu jpeg_decode wxh/r%      # decode + resize, by w&h or by ratio
#       fpga/cpu webp_save   [q]         # save webp to file,  default quality 75
#       fpga/cpu webp_encode [q]         # encode webp to ram, default quality 75
#
#       cpu  open                        # open
#       cpu  decode                      # decode
#       cpu  resize wxh/r%               # resize, by w&h or by ratio
#       cpu  crop   wxh                  # crop
#       cpu  save   type  [q]            # save to file, default quality 75
#       cpu  encode type  [q]            # save to ram, default quality 75



#===========
# TEST CASES
#===========


#==========
# jpeg-jpeg
#==========

#input  input.jpg                # file
#fpga   jpeg_open   300x300      # open + resize to 300x300
#cpu    save        jpeg  75     # save to jpeg
#output output                   # no need to specify extension


#input  /dev/shm/input           # dir
#fpga   jpeg_open  50%           # open + resize by 50%
#cpu    save       jpeg  75      # save to jpeg
#output /dev/shm/output


#input  /dev/shm/input
#cpu   jpeg_open  300x300        # open + resize, by CPU
#cpu   save       jpeg   75      # save to jpeg,  by CPU
#output /dev/shm/output



#==========
# jpeg-webp
#==========

#input  /dev/shm/input            # file / dir
#fpga   jpeg_open 1080x720        # open + resize
#fpga   webp_save 75              # save webp to file
#output output



input  ./input                    # file / dir
fpga   jpeg_open   300x300        # open + resize
fpga   webp_encode 75             # save webp to ram
output ./output



#input  ./rnd_jpeg_bl_3k           # file / dir
#fpga   jpeg_decode 256x256      # decode + resize
#cpu   jpeg_decode 512x512      # decode + resize
#cpu   webp_save  75             # save to webp
#fpga   webp_save  75             # save to webp
#output ./output


#==============
# convert (cip)
#==============

#input  /dev/shm/input           # file / dir
#fpga   convert 300x300 100x100  # resize + crop
#output /dev/shm/output



#==========
# jpeg-open
#==========

#input  /dev/shm/input           # file / dir
#fpga   jpeg_open 300x300        # open + resize
#output /dev/shm/output



#============
# jpeg-decode
#============

#input  /dev/shm/input           # file / dir
#fpga   jpeg_decode 300x300      # decode + resize
#output /dev/shm/output



#===========
# webp-save
#===========

#input  /dev/shm/input            # file / dir
#cpu    open                      # open
#fpga   webp_save  75             # save to webp
#output /dev/shm/output



#============
# webp-encode
#============

#input  /dev/shm/input            # file / dir
#cpu    open                      # open
#fpga   webp_encode  75           # save webp to ram
#output /dev/shm/output



#=================
# other operations
#=================

#input  /dev/shm/input           # file / dir
#cpu    open                     # open
#cpu    resize 300x300           # resize
#cpu    crop   100x100           # crop
#cpu    save   jpeg  75          # save to jpeg
#output /dev/shm/output
